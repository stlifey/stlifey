From 364ff4068a0c339866d278468efd6b7bffd16f98 Mon Sep 17 00:00:00 2001
From: stlifey joe <stlifey@gmail.com>
Date: Sat, 14 Feb 2015 11:59:22 +0800
Subject: [PATCH] Revert "FE/Common/VBoxKeyboard: use XKB on X11 hosts to match
 all keys on the keyboard, not just the layout-dependent ones, to fix
 Brazillian Thinkpad keyboards."

This reverts commit 1a2bc55f7cadc6fc68b247de3bc2473282857421.
---
 src/VBox/Frontends/Common/VBoxKeyboard/xkbtoscan.h | 31 ++++++++++++----------
 1 file changed, 17 insertions(+), 14 deletions(-)

diff --git a/src/VBox/Frontends/Common/VBoxKeyboard/xkbtoscan.h b/src/VBox/Frontends/Common/VBoxKeyboard/xkbtoscan.h
index 6391b8f..d97314d 100644
--- a/src/VBox/Frontends/Common/VBoxKeyboard/xkbtoscan.h
+++ b/src/VBox/Frontends/Common/VBoxKeyboard/xkbtoscan.h
@@ -37,6 +37,9 @@ enum { XKB_NAME_SIZE = 4 };
 
 /**
  * This table contains a list of mappings of XKB key names to XT scan codes.
+ * We only use XKB to look up layout-dependent keys (mainly the alpha-numeric
+ * ones), so that user re-mappings will work at least for the remaining keys.
+ * This is the reason for the commented out entries in the table.
  */
 struct
 {
@@ -44,7 +47,7 @@ struct
     unsigned uScan;
 } xkbMap[] =
 {
-    { "ESC", 0x1 },
+/*    { "ESC", 0x1 }, */
     { "AE01", 0x2 },
     { "AE02", 0x3 },
     { "AE03", 0x4 },
@@ -57,8 +60,8 @@ struct
     { "AE10", 0xb },
     { "AE11", 0xc },
     { "AE12", 0xd },
-    { "BKSP", 0xe },
-    { "TAB", 0xf },
+/*    { "BKSP", 0xe },
+    { "TAB", 0xf }, */
     { "AD01", 0x10 },
     { "AD02", 0x11 },
     { "AD03", 0x12 },
@@ -71,8 +74,8 @@ struct
     { "AD10", 0x19 },
     { "AD11", 0x1a },
     { "AD12", 0x1b },
-    { "RTRN", 0x1c },
-    { "LCTL", 0x1d },
+/*    { "RTRN", 0x1c },
+    { "LCTL", 0x1d }, */
     { "AC01", 0x1e },
     { "AC02", 0x1f },
     { "AC03", 0x20 },
@@ -86,7 +89,7 @@ struct
     { "AC11", 0x28 },
     { "AC12", 0x2b },
     { "TLDE", 0x29 },
-    { "LFSH", 0x2a },
+/*    { "LFSH", 0x2a }, */
     { "BKSL", 0x2b },
     { "AB01", 0x2c },
     { "AB02", 0x2d },
@@ -98,7 +101,7 @@ struct
     { "AB08", 0x33 },
     { "AB09", 0x34 },
     { "AB10", 0x35 },
-    { "RTSH", 0x36 },
+/*    { "RTSH", 0x36 },
     { "KPMU", 0x37 },
     { "LALT", 0x38 },
     { "SPCE", 0x39 },
@@ -129,12 +132,12 @@ struct
     { "KP0", 0x52 },
     { "KPDL", 0x53 },
     { "KPPT", 0x7e },
-    { "LVL3", 0x138 },
+    { "LVL3", 0x138 }, */
     { "LSGT", 0x56 },
-    { "FK11", 0x57 },
-    { "FK12", 0x58 },
+/*    { "FK11", 0x57 },
+    { "FK12", 0x58 }, */
     { "AB11", 0x73 },
-    { "KATA", 0x0 },
+/*    { "KATA", 0x0 },
     { "HIRA", 0x0 },
     { "HENK", 0x79 },
     { "HKTG", 0x70 },
@@ -170,9 +173,9 @@ struct
     { "I129", 0x7e },
     { "KPPT", 0x7e },
     { "HNGL", 0xf2 },
-    { "HJCV", 0xf1 },
+    { "HJCV", 0xf1 }, */
     { "AE13", 0x7d },
-    { "LWIN", 0x15b },
+/*    { "LWIN", 0x15b },
     { "LMTA", 0x15b },
     { "RWIN", 0x15c },
     { "RMTA", 0x15c },
@@ -295,5 +298,5 @@ struct
     { "I250", 0x0 },
     { "I251", 0x0 },
     { "I252", 0x0 },
-    { "I253", 0x0 }
+    { "I253", 0x0 } */
 };
-- 
2.3.0

